// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id              String   @id @unique
  isActive        Boolean  @default(true)
  name            String   @unique
  wallet          String   @unique
  vipExpiration   DateTime @default(now())
  levels          String   @default("{}")
  createdAt       DateTime @default(now())
  memberships     String   @default("{}")
  quests          String   @default("{}")
  energy          Int      @default(1000)
  coin            Int      @default(0)
  pixel           Int      @default(0)
  currentSeed     String   @default("Popberry Seeds")
  seeds           Int      @default(0)
  landOneState    String   @default("EMPTY")
  landOneUpdate   DateTime @default(now())
  landTwoState    String   @default("EMPTY")
  landTwoUpdate   DateTime @default(now())
  landThreeState  String   @default("EMPTY")
  landThreeUpdate DateTime @default(now())
  energyUpdate    DateTime @default(now())
  vipUpdate       DateTime @default(now())
  mailUpdate      DateTime @default(now())

  isCityTreeActive Boolean  @default(true)
  cityTreeUpdate   DateTime @default(now())

  isCarnivalActive      Boolean  @default(true)
  carnivalUpdate        DateTime @default(now())
  carnivalSeed          String   @default("Orange Grumpkin Seeds")
  carnivalSeedsQuantity Int      @default(0)
  carnivalLandState     String   @default("EMPTY")
  carnivalLandUpdate    DateTime @default(now())

  isNuCyberActive       Boolean  @default(true)
  nuCyberFirstRun       Boolean  @default(true)
  nuCyberUpdate         DateTime @default(now())
  nuCyberBoxes          Int      @default(0)
  nuCyberCraftName      String   @default("")
  nuCyberCraftUpdate    DateTime @default(now())
  nuCyberCraftAvailable Boolean  @default(true)

  tasks Tasks[]
  eggs  Eggs[]
}

model Tasks {
  id             Int      @id @default(autoincrement())
  itemName       String
  itemQuantity   Int
  rewardType     String
  rewardQuantity Int
  rewardExp      Int      @default(0)
  expiresAt      DateTime @default(now())

  account   Account @relation(fields: [accountId], references: [id])
  accountId String
}

model Eggs {
  id         Int      @id @default(autoincrement())
  landId     Int
  landUpdate DateTime @default(now())

  account   Account @relation(fields: [accountId], references: [id])
  accountId String

  @@unique([landId, accountId])
}
